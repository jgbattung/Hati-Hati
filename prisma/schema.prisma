// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique
  username String @unique
  name String?
  email String @unique
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  friends Friend[] @relation("UserFriends")
  friendsOf Friend[] @relation("FriendsOfUser")

  sentInvites Invitation[] @relation("SentInvites")
}

model Friend {
  id String @id @default(cuid())
  userId String
  friendId String
  createdAt DateTime @default(now())

  user User @relation("UserFriends", fields: [userId], references: [id], onDelete: Cascade)
  friend User @relation("FriendsOfUser", fields: [friendId], references: [id], onDelete: Cascade)

  @@unique([userId, friendId])
  @@index([userId])
  @@index([friendId])
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  EXPIRED
}

model Invitation {
  id String @id @default(cuid())
  email String
  invitedBy String
  token String @unique
  status InvitationStatus @default(PENDING)
  expiresAt DateTime
  createdAt DateTime @default(now())

  sender User @relation("SentInvites", fields: [invitedBy], references: [id], onDelete: Cascade)

  @@index([email])
  @@index([token])
}